/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { DuckTiersBsc } from "./DuckTiersBsc";

export class DuckTiersBscFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DuckTiersBsc> {
    return super.deploy(overrides || {}) as Promise<DuckTiersBsc>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DuckTiersBsc {
    return super.attach(address) as DuckTiersBsc;
  }
  connect(signer: Signer): DuckTiersBscFactory {
    return super.connect(signer) as DuckTiersBscFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DuckTiersBsc {
    return new Contract(address, _abi, signerOrProvider) as DuckTiersBsc;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "snapshotAuthorizedAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "tierPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "staked",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "stakedTime",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "userTier",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "_tierIds",
        type: "uint8[]"
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]"
      }
    ],
    name: "initTiers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_snapshotAuth",
        type: "address"
      }
    ],
    name: "updateSnapshotAuthorizedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_tierId",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "updateTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]"
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]"
      }
    ],
    name: "setUserStaked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address"
      }
    ],
    name: "getUserTier",
    outputs: [
      {
        internalType: "uint8",
        name: "res",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getTiers",
    outputs: [
      {
        internalType: "uint256[10]",
        name: "buf",
        type: "uint256[10]"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x60806040526000805460ff60a01b1916600160a21b17905534801561002357600080fd5b50600061002e61007d565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610081565b3390565b610b42806100906000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c5780639d78576b116100665780639d78576b14610323578063de17057014610446578063e4d2620e14610487578063f2fde38b146104ad576100cf565b8063715018a6146102e4578063826d3379146102ec5780638da5cb5b1461031b576100cf565b80631959a002146100d45780631cc88afc1461011357806321c7557c1461013b5780632bd30a8b1461017757806334e2948d1461019d57806336e9cff0146101c1575b600080fd5b6100fa600480360360208110156100ea57600080fd5b50356001600160a01b03166104d3565b6040805192835260208301919091528051918290030190f35b6101396004803603604081101561012957600080fd5b5060ff81351690602001356104ec565b005b6101616004803603602081101561015157600080fd5b50356001600160a01b03166105e6565b6040805160ff9092168252519081900360200190f35b6101396004803603602081101561018d57600080fd5b50356001600160a01b03166105fb565b6101a5610675565b604080516001600160a01b039092168252519081900360200190f35b610139600480360360408110156101d757600080fd5b810190602081018135600160201b8111156101f157600080fd5b82018360208201111561020357600080fd5b803590602001918460208302840111600160201b8311171561022457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561027357600080fd5b82018360208201111561028557600080fd5b803590602001918460208302840111600160201b831117156102a657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610684945050505050565b610139610747565b6103096004803603602081101561030257600080fd5b50356107e9565b60408051918252519081900360200190f35b6101a56107fd565b6101396004803603604081101561033957600080fd5b810190602081018135600160201b81111561035357600080fd5b82018360208201111561036557600080fd5b803590602001918460208302840111600160201b8311171561038657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156103d557600080fd5b8201836020820111156103e757600080fd5b803590602001918460208302840111600160201b8311171561040857600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061080d945050505050565b61044e6108c1565b604051808261014080838360005b8381101561047457818101518382015260200161045c565b5050505090500191505060405180910390f35b6101616004803603602081101561049d57600080fd5b50356001600160a01b0316610929565b610139600480360360208110156104c357600080fd5b50356001600160a01b03166109ab565b6002602052600090815260409020805460019091015482565b6104f4610aa3565b6000546001600160a01b03908116911614610544576040805162461bcd60e51b81526020600482018190526024820152600080516020610aed833981519152604482015290519081900360640190fd5b60008260ff1611801561055b5750600a8260ff1611155b61059e576040805162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a590817dd1a595c9259608a1b604482015290519081900360640190fd5b8060048360ff16600a81106105af57fe5b015560005460ff600160a01b909104811690831611156105e2576000805460ff60a01b1916600160a01b60ff8516021790555b5050565b60016020526000908152604090205460ff1681565b610603610aa3565b6000546001600160a01b03908116911614610653576040805162461bcd60e51b81526020600482018190526024820152600080516020610aed833981519152604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6003546001600160a01b03163314806106b557506106a06107fd565b6001600160a01b0316336001600160a01b0316145b6106f5576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b60005b82518110156107425781818151811061070d57fe5b6020026020010151600484838151811061072357fe5b602002602001015160ff16600a811061073857fe5b01556001016106f8565b505050565b61074f610aa3565b6000546001600160a01b0390811691161461079f576040805162461bcd60e51b81526020600482018190526024820152600080516020610aed833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600481600a81106107f657fe5b0154905081565b6000546001600160a01b03165b90565b610815610aa3565b6000546001600160a01b03908116911614610865576040805162461bcd60e51b81526020600482018190526024820152600080516020610aed833981519152604482015290519081900360640190fd5b60005b82518110156107425781818151811061087d57fe5b60200260200101516002600085848151811061089557fe5b6020908102919091018101516001600160a01b0316825281019190915260400160002055600101610868565b6108c9610aa7565b60015b600a8160ff1610156109255760048160ff16600a81106108e857fe5b01546108f4575061080a565b60048160ff16600a811061090457fe5b0154826001830360ff16600a811061091857fe5b60200201526001016108cc565b5090565b600060015b600a8160ff1610156109965760048160ff16600a811061094a57fe5b01541580610980575060048160ff16600a811061096357fe5b01546001600160a01b038416600090815260026020526040902054105b1561098b57506109a6565b90506001810161092e565b5050600054600160a01b900460ff165b919050565b6109b3610aa3565b6000546001600160a01b03908116911614610a03576040805162461bcd60e51b81526020600482018190526024820152600080516020610aed833981519152604482015290519081900360640190fd5b6001600160a01b038116610a485760405162461bcd60e51b8152600401808060200182810382526026815260200180610ac76026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b604051806101400160405280600a90602082028036833750919291505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220771ed8c64c7ca5883b6ed28d9b0b9f62a02019168ed7bf8fbbedf6daa636bee864736f6c634300060c0033";
