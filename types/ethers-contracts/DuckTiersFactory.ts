/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { DuckTiers } from "./DuckTiers";

export class DuckTiersFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_duckTokenAddress: string, overrides?: Overrides): Promise<DuckTiers> {
    return super.deploy(_duckTokenAddress, overrides || {}) as Promise<
      DuckTiers
    >;
  }
  getDeployTransaction(
    _duckTokenAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_duckTokenAddress, overrides || {});
  }
  attach(address: string): DuckTiers {
    return super.attach(address) as DuckTiers;
  }
  connect(signer: Signer): DuckTiersFactory {
    return super.connect(signer) as DuckTiersFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DuckTiers {
    return new Contract(address, _abi, signerOrProvider) as DuckTiers;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_duckTokenAddress",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "EmergencyWithdrawn",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Staked",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    name: "Withdrawn",
    type: "event"
  },
  {
    inputs: [],
    name: "DUCK",
    outputs: [
      {
        internalType: "contract ERC20Burnable",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "canEmergencyWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "staked",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "stakedTime",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "withdrawFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_status",
        type: "bool"
      }
    ],
    name: "updateEmergencyWithdrawStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_tierId",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "updateTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_key",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256"
      }
    ],
    name: "updateWithdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address"
      }
    ],
    name: "getUserTier",
    outputs: [
      {
        internalType: "uint8",
        name: "res",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "calculateWithdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getTiers",
    outputs: [
      {
        internalType: "uint256[10]",
        name: "buf",
        type: "uint256[10]"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x60806040526002805460ff1916600417905534801561001d57600080fd5b506040516113393803806113398339818101604052602081101561004057600080fd5b5051600061004c610172565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001808055600f80546001600160a01b0319166001600160a01b038416179055686c6b935b8bbd400000906004015569010f0cf064dd5920000060046002015569021e19e0c9bab240000060046003015569043c33c1937564800000600480015550600e8054600181810183556000838152601e7fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd93840155835480830185556019908401558354808301855560149084015583548083018555600a908401558354808301855560059084015583549182019093550155610176565b3390565b6111b4806101856000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063db2e21bc11610066578063db2e21bc14610293578063de1705701461029b578063e4d2620e146102dc578063f2fde38b1461031857610100565b80638da5cb5b1461022e578063b6b55f2514610252578063cac4fab11461026f578063cb9a8c7e1461027757610100565b806332ccb3a1116100d357806332ccb3a1146101c75780635435e4cd146101e6578063715018a6146102095780638b36e64e1461021157610100565b80631959a002146101055780631cc88afc1461014457806329a5cfd61461016c5780632e1a7d4d146101aa575b600080fd5b61012b6004803603602081101561011b57600080fd5b50356001600160a01b031661033e565b6040805192835260208301919091528051918290030190f35b61016a6004803603604081101561015a57600080fd5b5060ff8135169060200135610357565b005b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610441565b60408051918252519081900360200190f35b61016a600480360360208110156101c057600080fd5b50356105e2565b61016a600480360360208110156101dd57600080fd5b503515156107fb565b61016a600480360360408110156101fc57600080fd5b5080359060200135610871565b61016a61092f565b6101986004803603602081101561022757600080fd5b50356109d1565b6102366109ef565b604080516001600160a01b039092168252519081900360200190f35b61016a6004803603602081101561026857600080fd5b50356109ff565b610236610b55565b61027f610b64565b604080519115158252519081900360200190f35b61016a610b74565b6102a3610cdf565b604051808261014080838360005b838110156102c95781810151838201526020016102b1565b5050505090500191505060405180910390f35b610302600480360360208110156102f257600080fd5b50356001600160a01b0316610d47565b6040805160ff9092168252519081900360200190f35b61016a6004803603602081101561032e57600080fd5b50356001600160a01b0316610dc2565b6003602052600090815260409020805460019091015482565b61035f610eba565b6000546001600160a01b039081169116146103af576040805162461bcd60e51b8152602060048201819052602482015260008051602061115f833981519152604482015290519081900360640190fd5b60008260ff161180156103c65750600a8260ff1611155b610409576040805162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a590817dd1a595c9259608a1b604482015290519081900360640190fd5b8060048360ff16600a811061041a57fe5b015560025460ff908116908316111561043d576002805460ff191660ff84161790555b5050565b6001600160a01b038216600090815260036020526040812080548311156104af576040805162461bcd60e51b815260206004820152601d60248201527f6e6f7420656e6f75676820616d6f756e7420746f207769746864726177000000604482015290519081900360640190fd5b60018101546104c190620d2f00610ebe565b421015610506576104fe60646104f8600e6000815481106104de57fe5b906000526020600020015486610f1f90919063ffffffff16565b90610f78565b9150506105dc565b600181015461051890621a5e00610ebe565b421015610535576104fe60646104f8600e6001815481106104de57fe5b60018101546105479062278d00610ebe565b421015610564576104fe60646104f8600e6002815481106104de57fe5b600181015461057690624f1a00610ebe565b421015610593576104fe60646104f8600e6003815481106104de57fe5b60018101546105a5906276a700610ebe565b4210156105c2576104fe60646104f8600e6004815481106104de57fe5b6105d860646104f8600e6005815481106104de57fe5b9150505b92915050565b6002600154141561063a576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260015533600090815260036020526040902080548211156106a4576040805162461bcd60e51b815260206004820152601d60248201527f6e6f7420656e6f75676820616d6f756e7420746f207769746864726177000000604482015290519081900360640190fd5b60006106b03384610441565b82549091506106bf9084610fba565b8255801561072d57600f5460408051630852cd8d60e31b81526004810184905290516001600160a01b03909216916342966c689160248082019260009290919082900301818387803b15801561071457600080fd5b505af1158015610728573d6000803e3d6000fd5b505050505b600f546001600160a01b031663a9059cbb336107498685610fba565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561078f57600080fd5b505af11580156107a3573d6000803e3d6000fd5b505050506040513d60208110156107b957600080fd5b5050604080518281529051849133917f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc69181900360200190a350506001805550565b610803610eba565b6000546001600160a01b03908116911614610853576040805162461bcd60e51b8152602060048201819052602482015260008051602061115f833981519152604482015290519081900360640190fd5b600f8054911515600160a01b0260ff60a01b19909216919091179055565b610879610eba565b6000546001600160a01b039081169116146108c9576040805162461bcd60e51b8152602060048201819052602482015260008051602061115f833981519152604482015290519081900360640190fd5b60648110610911576040805162461bcd60e51b815260206004820152601060248201526f1d1bdbc81a1a59da081c195c98d95b9d60821b604482015290519081900360640190fd5b80600e838154811061091f57fe5b6000918252602090912001555050565b610937610eba565b6000546001600160a01b03908116911614610987576040805162461bcd60e51b8152602060048201819052602482015260008051602061115f833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600e81815481106109de57fe5b600091825260209091200154905081565b6000546001600160a01b03165b90565b60026001541415610a57576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600155600f54604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b158015610ab657600080fd5b505af1158015610aca573d6000803e3d6000fd5b505050506040513d6020811015610ae057600080fd5b505033600090815260036020526040902054610afc9082610ebe565b33600081815260036020908152604091829020938455426001909401939093558051848152905191927f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d92918290030190a25060018055565b600f546001600160a01b031681565b600f54600160a01b900460ff1681565b600f54600160a01b900460ff16610bc6576040805162461bcd60e51b8152602060048201526011602482015270199d5b98dd1a5bdb88191a5cd8589b1959607a1b604482015290519081900360640190fd5b3360009081526003602052604090208054610c1e576040805162461bcd60e51b81526020600482015260136024820152726e6f7468696e6720746f20776974686472617760681b604482015290519081900360640190fd5b80546000808355600f546040805163a9059cbb60e01b81523360048201526024810185905290516001600160a01b039092169263a9059cbb926044808401936020939083900390910190829087803b158015610c7957600080fd5b505af1158015610c8d573d6000803e3d6000fd5b505050506040513d6020811015610ca357600080fd5b505060408051828152905133917f2e39961a70a10f4d46383948095ac2752b3ee642a7c76aa827410aaff08c2e51919081900360200190a25050565b610ce76110f8565b60015b600a8160ff161015610d435760048160ff16600a8110610d0657fe5b0154610d1257506109fc565b60048160ff16600a8110610d2257fe5b0154826001830360ff16600a8110610d3657fe5b6020020152600101610cea565b5090565b600060015b600a8160ff161015610db45760048160ff16600a8110610d6857fe5b01541580610d9e575060048160ff16600a8110610d8157fe5b01546001600160a01b038416600090815260036020526040902054105b15610da95750610dbd565b905060018101610d4c565b505060025460ff165b919050565b610dca610eba565b6000546001600160a01b03908116911614610e1a576040805162461bcd60e51b8152602060048201819052602482015260008051602061115f833981519152604482015290519081900360640190fd5b6001600160a01b038116610e5f5760405162461bcd60e51b81526004018080602001828103825260268152602001806111186026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600082820183811015610f18576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082610f2e575060006105dc565b82820282848281610f3b57fe5b0414610f185760405162461bcd60e51b815260040180806020018281038252602181526020018061113e6021913960400191505060405180910390fd5b6000610f1883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610ffc565b6000610f1883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061109e565b600081836110885760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561104d578181015183820152602001611035565b50505050905090810190601f16801561107a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161109457fe5b0495945050505050565b600081848411156110f05760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561104d578181015183820152602001611035565b505050900390565b604051806101400160405280600a90602082028036833750919291505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220e2e809cf6c56449d31e4f3bbb540f6f632554096f505af1c6bdc13770bc5400c64736f6c634300060c0033";
